<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_agile_backlog_item</collection>
        <condition/>
        <description>Readjust the order of all backlog items</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_agile_backlog_item">orderVALCHANGES^ORorderISEMPTY^EQ<item endquery="false" field="order" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="order" goto="false" newquery="false" operator="ISEMPTY" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Backlog Item - Manage order</name>
        <order>20000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var IsValidColumn = x_snc_devtools.IsValidColumn;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var GlideRecordUpdate = x_snc_devtools.GlideRecordUpdate;
	var IsValidTable = x_snc_devtools.IsValidTable;
	
	function RecordManageOrder(strTable,strColumn,strSysId,nNewOrder)
	{
		strTable = GetStringValue(strTable);
		strColumn = GetStringValue(strColumn);
		
		if (IsValidTable(strTable) == false)
		{
			return false;
		}
		
		if (IsValidColumn(strTable,strColumn) == false)
		{
			return false;
		}
		
		
		var grRecords = new GlideRecord(strTable);
		grRecords.orderBy(strColumn);
		grRecords.query();
		
		var nOrder = 1;
		while (grRecords.next())
		{
			if (grRecords.getValue(strColumn) == nNewOrder)
			{
				nOrder++;
			}
			if (grRecords.sys_id != strSysId)
			{
				grRecords.setValue(strColumn,nOrder);
				GlideRecordUpdate(grRecords,true);
			}
			/*if (nOrder == nNewOrder)
			{
				nOrder++;
			}*/
			nOrder++;
		}
	}
	
	
	RecordManageOrder('x_snc_agile_backlog_item','order',current.sys_id,current.order);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-06-06 20:09:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>48c0732bdbbb8110b652edb305961985</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Backlog Item - Manage order</sys_name>
        <sys_overrides/>
        <sys_package display_value="Agile WORK IN PROGRESS" source="x_snc_agile">65135483db774510b652edb3059619c8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Agile WORK IN PROGRESS">65135483db774510b652edb3059619c8</sys_scope>
        <sys_update_name>sys_script_48c0732bdbbb8110b652edb305961985</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-07 17:33:09</sys_updated_on>
        <template/>
        <when>async_always</when>
        <x_snc_datasilos_created>false</x_snc_datasilos_created>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=48c0732bdbbb8110b652edb305961985"/>
</record_update>
